// HTTP method code
export var HttpMethodCode;
(function (HttpMethodCode) {
    // Undefined [0] 
    HttpMethodCode[HttpMethodCode["UNDEFINED"] = 0] = "UNDEFINED";
    // HTTP GET (read) [1] 
    HttpMethodCode[HttpMethodCode["GET"] = 1] = "GET";
    // HTTP POST (create) [2] 
    HttpMethodCode[HttpMethodCode["POST"] = 2] = "POST";
    // HTTP PUT (update/replace) [3] 
    HttpMethodCode[HttpMethodCode["PUT"] = 3] = "PUT";
    // HTTP PATCH (update/modify) [4] 
    HttpMethodCode[HttpMethodCode["PATCH"] = 4] = "PATCH";
    // HTTP DELETE (delete) [5] 
    HttpMethodCode[HttpMethodCode["DELETE"] = 5] = "DELETE";
})(HttpMethodCode || (HttpMethodCode = {}));
// Return list of HttpMethodCode values and their display names
export function GetHttpMethodCodes() {
    let result = new Map();
    result.set(HttpMethodCode.UNDEFINED, 'Undefined');
    result.set(HttpMethodCode.GET, 'Get');
    result.set(HttpMethodCode.POST, 'Post');
    result.set(HttpMethodCode.PUT, 'Put');
    result.set(HttpMethodCode.PATCH, 'Patch');
    result.set(HttpMethodCode.DELETE, 'Delete');
    return result;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSHR0cE1ldGhvZENvZGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtcHVsc2UtbGliL3NyYy9saWIvZW51bXMvSHR0cE1ldGhvZENvZGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsbUJBQW1CO0FBQ25CLE1BQU0sQ0FBTixJQUFZLGNBb0JYO0FBcEJELFdBQVksY0FBYztJQUV0QixpQkFBaUI7SUFDakIsNkRBQWEsQ0FBQTtJQUViLHVCQUF1QjtJQUN2QixpREFBTyxDQUFBO0lBRVAsMEJBQTBCO0lBQzFCLG1EQUFRLENBQUE7SUFFUixpQ0FBaUM7SUFDakMsaURBQU8sQ0FBQTtJQUVQLGtDQUFrQztJQUNsQyxxREFBUyxDQUFBO0lBRVQsNEJBQTRCO0lBQzVCLHVEQUFVLENBQUE7QUFFZCxDQUFDLEVBcEJXLGNBQWMsS0FBZCxjQUFjLFFBb0J6QjtBQUVELCtEQUErRDtBQUMvRCxNQUFNLFVBQVUsa0JBQWtCO0lBRTlCLElBQUksTUFBTSxHQUFHLElBQUksR0FBRyxFQUEwQixDQUFDO0lBRy9DLE1BQU0sQ0FBQyxHQUFHLENBQUMsY0FBYyxDQUFDLFNBQVMsRUFBRSxXQUFXLENBQUMsQ0FBQztJQUVsRCxNQUFNLENBQUMsR0FBRyxDQUFDLGNBQWMsQ0FBQyxHQUFHLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFFdEMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxjQUFjLENBQUMsSUFBSSxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBRXhDLE1BQU0sQ0FBQyxHQUFHLENBQUMsY0FBYyxDQUFDLEdBQUcsRUFBRSxLQUFLLENBQUMsQ0FBQztJQUV0QyxNQUFNLENBQUMsR0FBRyxDQUFDLGNBQWMsQ0FBQyxLQUFLLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFFMUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxjQUFjLENBQUMsTUFBTSxFQUFFLFFBQVEsQ0FBQyxDQUFDO0lBRzVDLE9BQU8sTUFBTSxDQUFDO0FBQ2xCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJcbi8vIEhUVFAgbWV0aG9kIGNvZGVcbmV4cG9ydCBlbnVtIEh0dHBNZXRob2RDb2RlIHtcbiBcbiAgICAvLyBVbmRlZmluZWQgWzBdIFxuICAgIFVOREVGSU5FRCA9IDAsXG4gXG4gICAgLy8gSFRUUCBHRVQgKHJlYWQpIFsxXSBcbiAgICBHRVQgPSAxLFxuIFxuICAgIC8vIEhUVFAgUE9TVCAoY3JlYXRlKSBbMl0gXG4gICAgUE9TVCA9IDIsXG4gXG4gICAgLy8gSFRUUCBQVVQgKHVwZGF0ZS9yZXBsYWNlKSBbM10gXG4gICAgUFVUID0gMyxcbiBcbiAgICAvLyBIVFRQIFBBVENIICh1cGRhdGUvbW9kaWZ5KSBbNF0gXG4gICAgUEFUQ0ggPSA0LFxuIFxuICAgIC8vIEhUVFAgREVMRVRFIChkZWxldGUpIFs1XSBcbiAgICBERUxFVEUgPSA1LFxuIFxufVxuXG4vLyBSZXR1cm4gbGlzdCBvZiBIdHRwTWV0aG9kQ29kZSB2YWx1ZXMgYW5kIHRoZWlyIGRpc3BsYXkgbmFtZXNcbmV4cG9ydCBmdW5jdGlvbiBHZXRIdHRwTWV0aG9kQ29kZXMoKSA6IE1hcDxIdHRwTWV0aG9kQ29kZSwgc3RyaW5nPiB7XG5cbiAgICBsZXQgcmVzdWx0ID0gbmV3IE1hcDxIdHRwTWV0aG9kQ29kZSwgc3RyaW5nPigpO1xuXG4gICAgXG4gICAgcmVzdWx0LnNldChIdHRwTWV0aG9kQ29kZS5VTkRFRklORUQsICdVbmRlZmluZWQnKTtcbiAgICBcbiAgICByZXN1bHQuc2V0KEh0dHBNZXRob2RDb2RlLkdFVCwgJ0dldCcpO1xuICAgIFxuICAgIHJlc3VsdC5zZXQoSHR0cE1ldGhvZENvZGUuUE9TVCwgJ1Bvc3QnKTtcbiAgICBcbiAgICByZXN1bHQuc2V0KEh0dHBNZXRob2RDb2RlLlBVVCwgJ1B1dCcpO1xuICAgIFxuICAgIHJlc3VsdC5zZXQoSHR0cE1ldGhvZENvZGUuUEFUQ0gsICdQYXRjaCcpO1xuICAgIFxuICAgIHJlc3VsdC5zZXQoSHR0cE1ldGhvZENvZGUuREVMRVRFLCAnRGVsZXRlJyk7XG4gICAgXG5cbiAgICByZXR1cm4gcmVzdWx0O1xufSJdfQ==