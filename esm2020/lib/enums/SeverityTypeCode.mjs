// Severity type (level) code
export var SeverityTypeCode;
(function (SeverityTypeCode) {
    // Undefined [0] 
    SeverityTypeCode[SeverityTypeCode["UNDEFINED"] = 0] = "UNDEFINED";
    // Low severity [1] 
    SeverityTypeCode[SeverityTypeCode["LOW"] = 1] = "LOW";
    // Medium severity [2] 
    SeverityTypeCode[SeverityTypeCode["MEDIUM"] = 2] = "MEDIUM";
    // High severity [3] 
    SeverityTypeCode[SeverityTypeCode["HIGH"] = 3] = "HIGH";
    // Critical severity [4] 
    SeverityTypeCode[SeverityTypeCode["CRITICAL"] = 4] = "CRITICAL";
})(SeverityTypeCode || (SeverityTypeCode = {}));
// Return list of SeverityTypeCode values and their display names
export function GetSeverityTypeCodes() {
    let result = new Map();
    result.set(SeverityTypeCode.UNDEFINED, 'Undefined');
    result.set(SeverityTypeCode.LOW, 'Low');
    result.set(SeverityTypeCode.MEDIUM, 'Medium');
    result.set(SeverityTypeCode.HIGH, 'High');
    result.set(SeverityTypeCode.CRITICAL, 'Critical');
    return result;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2V2ZXJpdHlUeXBlQ29kZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25neC1wdWxzZS1saWIvc3JjL2xpYi9lbnVtcy9TZXZlcml0eVR5cGVDb2RlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLDZCQUE2QjtBQUM3QixNQUFNLENBQU4sSUFBWSxnQkFpQlg7QUFqQkQsV0FBWSxnQkFBZ0I7SUFFeEIsaUJBQWlCO0lBQ2pCLGlFQUFhLENBQUE7SUFFYixvQkFBb0I7SUFDcEIscURBQU8sQ0FBQTtJQUVQLHVCQUF1QjtJQUN2QiwyREFBVSxDQUFBO0lBRVYscUJBQXFCO0lBQ3JCLHVEQUFRLENBQUE7SUFFUix5QkFBeUI7SUFDekIsK0RBQVksQ0FBQTtBQUVoQixDQUFDLEVBakJXLGdCQUFnQixLQUFoQixnQkFBZ0IsUUFpQjNCO0FBRUQsaUVBQWlFO0FBQ2pFLE1BQU0sVUFBVSxvQkFBb0I7SUFFaEMsSUFBSSxNQUFNLEdBQUcsSUFBSSxHQUFHLEVBQTRCLENBQUM7SUFHakQsTUFBTSxDQUFDLEdBQUcsQ0FBQyxnQkFBZ0IsQ0FBQyxTQUFTLEVBQUUsV0FBVyxDQUFDLENBQUM7SUFFcEQsTUFBTSxDQUFDLEdBQUcsQ0FBQyxnQkFBZ0IsQ0FBQyxHQUFHLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFFeEMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxnQkFBZ0IsQ0FBQyxNQUFNLEVBQUUsUUFBUSxDQUFDLENBQUM7SUFFOUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFFMUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxnQkFBZ0IsQ0FBQyxRQUFRLEVBQUUsVUFBVSxDQUFDLENBQUM7SUFHbEQsT0FBTyxNQUFNLENBQUM7QUFDbEIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIlxuLy8gU2V2ZXJpdHkgdHlwZSAobGV2ZWwpIGNvZGVcbmV4cG9ydCBlbnVtIFNldmVyaXR5VHlwZUNvZGUge1xuIFxuICAgIC8vIFVuZGVmaW5lZCBbMF0gXG4gICAgVU5ERUZJTkVEID0gMCxcbiBcbiAgICAvLyBMb3cgc2V2ZXJpdHkgWzFdIFxuICAgIExPVyA9IDEsXG4gXG4gICAgLy8gTWVkaXVtIHNldmVyaXR5IFsyXSBcbiAgICBNRURJVU0gPSAyLFxuIFxuICAgIC8vIEhpZ2ggc2V2ZXJpdHkgWzNdIFxuICAgIEhJR0ggPSAzLFxuIFxuICAgIC8vIENyaXRpY2FsIHNldmVyaXR5IFs0XSBcbiAgICBDUklUSUNBTCA9IDQsXG4gXG59XG5cbi8vIFJldHVybiBsaXN0IG9mIFNldmVyaXR5VHlwZUNvZGUgdmFsdWVzIGFuZCB0aGVpciBkaXNwbGF5IG5hbWVzXG5leHBvcnQgZnVuY3Rpb24gR2V0U2V2ZXJpdHlUeXBlQ29kZXMoKSA6IE1hcDxTZXZlcml0eVR5cGVDb2RlLCBzdHJpbmc+IHtcblxuICAgIGxldCByZXN1bHQgPSBuZXcgTWFwPFNldmVyaXR5VHlwZUNvZGUsIHN0cmluZz4oKTtcblxuICAgIFxuICAgIHJlc3VsdC5zZXQoU2V2ZXJpdHlUeXBlQ29kZS5VTkRFRklORUQsICdVbmRlZmluZWQnKTtcbiAgICBcbiAgICByZXN1bHQuc2V0KFNldmVyaXR5VHlwZUNvZGUuTE9XLCAnTG93Jyk7XG4gICAgXG4gICAgcmVzdWx0LnNldChTZXZlcml0eVR5cGVDb2RlLk1FRElVTSwgJ01lZGl1bScpO1xuICAgIFxuICAgIHJlc3VsdC5zZXQoU2V2ZXJpdHlUeXBlQ29kZS5ISUdILCAnSGlnaCcpO1xuICAgIFxuICAgIHJlc3VsdC5zZXQoU2V2ZXJpdHlUeXBlQ29kZS5DUklUSUNBTCwgJ0NyaXRpY2FsJyk7XG4gICAgXG5cbiAgICByZXR1cm4gcmVzdWx0O1xufSJdfQ==