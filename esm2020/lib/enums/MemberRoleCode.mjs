// Member role code (represent role of user in the account)
export var MemberRoleCode;
(function (MemberRoleCode) {
    // Undefined [0] 
    MemberRoleCode[MemberRoleCode["UNDEFINED"] = 0] = "UNDEFINED";
    // Account administrator can perform all operations [1] 
    MemberRoleCode[MemberRoleCode["ADMIN"] = 1] = "ADMIN";
    // Supervisor can perform operations on events and generate reports [2] 
    MemberRoleCode[MemberRoleCode["SUPERVISOR"] = 2] = "SUPERVISOR";
    // Account operator can perform operations on events only [3] 
    MemberRoleCode[MemberRoleCode["OPERATOR"] = 3] = "OPERATOR";
    // Viewer has read-only permissions [4] 
    MemberRoleCode[MemberRoleCode["VIEWER"] = 4] = "VIEWER";
})(MemberRoleCode || (MemberRoleCode = {}));
// Return list of MemberRoleCode values and their display names
export function GetMemberRoleCodes() {
    let result = new Map();
    result.set(MemberRoleCode.UNDEFINED, 'Undefined');
    result.set(MemberRoleCode.ADMIN, 'Admin');
    result.set(MemberRoleCode.SUPERVISOR, 'Supervisor');
    result.set(MemberRoleCode.OPERATOR, 'Operator');
    result.set(MemberRoleCode.VIEWER, 'Viewer');
    return result;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWVtYmVyUm9sZUNvZGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtcHVsc2UtbGliL3NyYy9saWIvZW51bXMvTWVtYmVyUm9sZUNvZGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsMkRBQTJEO0FBQzNELE1BQU0sQ0FBTixJQUFZLGNBaUJYO0FBakJELFdBQVksY0FBYztJQUV0QixpQkFBaUI7SUFDakIsNkRBQWEsQ0FBQTtJQUViLHdEQUF3RDtJQUN4RCxxREFBUyxDQUFBO0lBRVQsd0VBQXdFO0lBQ3hFLCtEQUFjLENBQUE7SUFFZCw4REFBOEQ7SUFDOUQsMkRBQVksQ0FBQTtJQUVaLHdDQUF3QztJQUN4Qyx1REFBVSxDQUFBO0FBRWQsQ0FBQyxFQWpCVyxjQUFjLEtBQWQsY0FBYyxRQWlCekI7QUFFRCwrREFBK0Q7QUFDL0QsTUFBTSxVQUFVLGtCQUFrQjtJQUU5QixJQUFJLE1BQU0sR0FBRyxJQUFJLEdBQUcsRUFBMEIsQ0FBQztJQUcvQyxNQUFNLENBQUMsR0FBRyxDQUFDLGNBQWMsQ0FBQyxTQUFTLEVBQUUsV0FBVyxDQUFDLENBQUM7SUFFbEQsTUFBTSxDQUFDLEdBQUcsQ0FBQyxjQUFjLENBQUMsS0FBSyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBRTFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsY0FBYyxDQUFDLFVBQVUsRUFBRSxZQUFZLENBQUMsQ0FBQztJQUVwRCxNQUFNLENBQUMsR0FBRyxDQUFDLGNBQWMsQ0FBQyxRQUFRLEVBQUUsVUFBVSxDQUFDLENBQUM7SUFFaEQsTUFBTSxDQUFDLEdBQUcsQ0FBQyxjQUFjLENBQUMsTUFBTSxFQUFFLFFBQVEsQ0FBQyxDQUFDO0lBRzVDLE9BQU8sTUFBTSxDQUFDO0FBQ2xCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJcbi8vIE1lbWJlciByb2xlIGNvZGUgKHJlcHJlc2VudCByb2xlIG9mIHVzZXIgaW4gdGhlIGFjY291bnQpXG5leHBvcnQgZW51bSBNZW1iZXJSb2xlQ29kZSB7XG4gXG4gICAgLy8gVW5kZWZpbmVkIFswXSBcbiAgICBVTkRFRklORUQgPSAwLFxuIFxuICAgIC8vIEFjY291bnQgYWRtaW5pc3RyYXRvciBjYW4gcGVyZm9ybSBhbGwgb3BlcmF0aW9ucyBbMV0gXG4gICAgQURNSU4gPSAxLFxuIFxuICAgIC8vIFN1cGVydmlzb3IgY2FuIHBlcmZvcm0gb3BlcmF0aW9ucyBvbiBldmVudHMgYW5kIGdlbmVyYXRlIHJlcG9ydHMgWzJdIFxuICAgIFNVUEVSVklTT1IgPSAyLFxuIFxuICAgIC8vIEFjY291bnQgb3BlcmF0b3IgY2FuIHBlcmZvcm0gb3BlcmF0aW9ucyBvbiBldmVudHMgb25seSBbM10gXG4gICAgT1BFUkFUT1IgPSAzLFxuIFxuICAgIC8vIFZpZXdlciBoYXMgcmVhZC1vbmx5IHBlcm1pc3Npb25zIFs0XSBcbiAgICBWSUVXRVIgPSA0LFxuIFxufVxuXG4vLyBSZXR1cm4gbGlzdCBvZiBNZW1iZXJSb2xlQ29kZSB2YWx1ZXMgYW5kIHRoZWlyIGRpc3BsYXkgbmFtZXNcbmV4cG9ydCBmdW5jdGlvbiBHZXRNZW1iZXJSb2xlQ29kZXMoKSA6IE1hcDxNZW1iZXJSb2xlQ29kZSwgc3RyaW5nPiB7XG5cbiAgICBsZXQgcmVzdWx0ID0gbmV3IE1hcDxNZW1iZXJSb2xlQ29kZSwgc3RyaW5nPigpO1xuXG4gICAgXG4gICAgcmVzdWx0LnNldChNZW1iZXJSb2xlQ29kZS5VTkRFRklORUQsICdVbmRlZmluZWQnKTtcbiAgICBcbiAgICByZXN1bHQuc2V0KE1lbWJlclJvbGVDb2RlLkFETUlOLCAnQWRtaW4nKTtcbiAgICBcbiAgICByZXN1bHQuc2V0KE1lbWJlclJvbGVDb2RlLlNVUEVSVklTT1IsICdTdXBlcnZpc29yJyk7XG4gICAgXG4gICAgcmVzdWx0LnNldChNZW1iZXJSb2xlQ29kZS5PUEVSQVRPUiwgJ09wZXJhdG9yJyk7XG4gICAgXG4gICAgcmVzdWx0LnNldChNZW1iZXJSb2xlQ29kZS5WSUVXRVIsICdWaWV3ZXInKTtcbiAgICBcblxuICAgIHJldHVybiByZXN1bHQ7XG59Il19