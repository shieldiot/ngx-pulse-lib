// RuleTypeCode represents the sources (engines) of rules
export var RuleTypeCode;
(function (RuleTypeCode) {
    // Undefined [0] 
    RuleTypeCode[RuleTypeCode["UNDEFINED"] = 0] = "UNDEFINED";
    // Suspicious IP based on IP reputation engine [1] 
    RuleTypeCode[RuleTypeCode["SUSPICIOUS_IP"] = 1] = "SUSPICIOUS_IP";
    // Static rule based on deterministic rule engine [2] 
    RuleTypeCode[RuleTypeCode["STATIC"] = 2] = "STATIC";
    // Rule based on anomaly detection and classification [3] 
    RuleTypeCode[RuleTypeCode["ANOMALY"] = 3] = "ANOMALY";
})(RuleTypeCode || (RuleTypeCode = {}));
// Return list of RuleTypeCode values and their display names
export function GetRuleTypeCodes() {
    let result = new Map();
    result.set(RuleTypeCode.UNDEFINED, 'Undefined');
    result.set(RuleTypeCode.SUSPICIOUS_IP, 'Suspicious Ip');
    result.set(RuleTypeCode.STATIC, 'Static');
    result.set(RuleTypeCode.ANOMALY, 'Anomaly');
    return result;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUnVsZVR5cGVDb2RlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LXB1bHNlLWxpYi9zcmMvbGliL2VudW1zL1J1bGVUeXBlQ29kZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSx5REFBeUQ7QUFDekQsTUFBTSxDQUFOLElBQVksWUFjWDtBQWRELFdBQVksWUFBWTtJQUVwQixpQkFBaUI7SUFDakIseURBQWEsQ0FBQTtJQUViLG1EQUFtRDtJQUNuRCxpRUFBaUIsQ0FBQTtJQUVqQixzREFBc0Q7SUFDdEQsbURBQVUsQ0FBQTtJQUVWLDBEQUEwRDtJQUMxRCxxREFBVyxDQUFBO0FBRWYsQ0FBQyxFQWRXLFlBQVksS0FBWixZQUFZLFFBY3ZCO0FBRUQsNkRBQTZEO0FBQzdELE1BQU0sVUFBVSxnQkFBZ0I7SUFFNUIsSUFBSSxNQUFNLEdBQUcsSUFBSSxHQUFHLEVBQXdCLENBQUM7SUFHN0MsTUFBTSxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUMsU0FBUyxFQUFFLFdBQVcsQ0FBQyxDQUFDO0lBRWhELE1BQU0sQ0FBQyxHQUFHLENBQUMsWUFBWSxDQUFDLGFBQWEsRUFBRSxlQUFlLENBQUMsQ0FBQztJQUV4RCxNQUFNLENBQUMsR0FBRyxDQUFDLFlBQVksQ0FBQyxNQUFNLEVBQUUsUUFBUSxDQUFDLENBQUM7SUFFMUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUMsT0FBTyxFQUFFLFNBQVMsQ0FBQyxDQUFDO0lBRzVDLE9BQU8sTUFBTSxDQUFDO0FBQ2xCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJcbi8vIFJ1bGVUeXBlQ29kZSByZXByZXNlbnRzIHRoZSBzb3VyY2VzIChlbmdpbmVzKSBvZiBydWxlc1xuZXhwb3J0IGVudW0gUnVsZVR5cGVDb2RlIHtcbiBcbiAgICAvLyBVbmRlZmluZWQgWzBdIFxuICAgIFVOREVGSU5FRCA9IDAsXG4gXG4gICAgLy8gU3VzcGljaW91cyBJUCBiYXNlZCBvbiBJUCByZXB1dGF0aW9uIGVuZ2luZSBbMV0gXG4gICAgU1VTUElDSU9VU19JUCA9IDEsXG4gXG4gICAgLy8gU3RhdGljIHJ1bGUgYmFzZWQgb24gZGV0ZXJtaW5pc3RpYyBydWxlIGVuZ2luZSBbMl0gXG4gICAgU1RBVElDID0gMixcbiBcbiAgICAvLyBSdWxlIGJhc2VkIG9uIGFub21hbHkgZGV0ZWN0aW9uIGFuZCBjbGFzc2lmaWNhdGlvbiBbM10gXG4gICAgQU5PTUFMWSA9IDMsXG4gXG59XG5cbi8vIFJldHVybiBsaXN0IG9mIFJ1bGVUeXBlQ29kZSB2YWx1ZXMgYW5kIHRoZWlyIGRpc3BsYXkgbmFtZXNcbmV4cG9ydCBmdW5jdGlvbiBHZXRSdWxlVHlwZUNvZGVzKCkgOiBNYXA8UnVsZVR5cGVDb2RlLCBzdHJpbmc+IHtcblxuICAgIGxldCByZXN1bHQgPSBuZXcgTWFwPFJ1bGVUeXBlQ29kZSwgc3RyaW5nPigpO1xuXG4gICAgXG4gICAgcmVzdWx0LnNldChSdWxlVHlwZUNvZGUuVU5ERUZJTkVELCAnVW5kZWZpbmVkJyk7XG4gICAgXG4gICAgcmVzdWx0LnNldChSdWxlVHlwZUNvZGUuU1VTUElDSU9VU19JUCwgJ1N1c3BpY2lvdXMgSXAnKTtcbiAgICBcbiAgICByZXN1bHQuc2V0KFJ1bGVUeXBlQ29kZS5TVEFUSUMsICdTdGF0aWMnKTtcbiAgICBcbiAgICByZXN1bHQuc2V0KFJ1bGVUeXBlQ29kZS5BTk9NQUxZLCAnQW5vbWFseScpO1xuICAgIFxuXG4gICAgcmV0dXJuIHJlc3VsdDtcbn0iXX0=