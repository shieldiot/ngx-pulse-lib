// User status code
export var UserStatusCode;
(function (UserStatusCode) {
    // Undefined [0] 
    UserStatusCode[UserStatusCode["UNDEFINED"] = 0] = "UNDEFINED";
    // User is registered and pending verification [1] 
    UserStatusCode[UserStatusCode["PENDING"] = 1] = "PENDING";
    // Active user in the system [2] 
    UserStatusCode[UserStatusCode["ACTIVE"] = 2] = "ACTIVE";
    // Blocked user (only account system can unblock the user) [4] 
    UserStatusCode[UserStatusCode["BLOCKED"] = 3] = "BLOCKED";
    // Suspended user (about to be deleted) [8] 
    UserStatusCode[UserStatusCode["SUSPENDED"] = 4] = "SUSPENDED";
})(UserStatusCode || (UserStatusCode = {}));
// Return list of UserStatusCode values and their display names
export function GetUserStatusCodes() {
    let result = new Map();
    result.set(UserStatusCode.UNDEFINED, 'Undefined');
    result.set(UserStatusCode.PENDING, 'Pending');
    result.set(UserStatusCode.ACTIVE, 'Active');
    result.set(UserStatusCode.BLOCKED, 'Blocked');
    result.set(UserStatusCode.SUSPENDED, 'Suspended');
    return result;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVXNlclN0YXR1c0NvZGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtcHVsc2UtbGliL3NyYy9saWIvZW51bXMvVXNlclN0YXR1c0NvZGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsbUJBQW1CO0FBQ25CLE1BQU0sQ0FBTixJQUFZLGNBaUJYO0FBakJELFdBQVksY0FBYztJQUV0QixpQkFBaUI7SUFDakIsNkRBQWEsQ0FBQTtJQUViLG1EQUFtRDtJQUNuRCx5REFBVyxDQUFBO0lBRVgsaUNBQWlDO0lBQ2pDLHVEQUFVLENBQUE7SUFFViwrREFBK0Q7SUFDL0QseURBQVcsQ0FBQTtJQUVYLDRDQUE0QztJQUM1Qyw2REFBYSxDQUFBO0FBRWpCLENBQUMsRUFqQlcsY0FBYyxLQUFkLGNBQWMsUUFpQnpCO0FBRUQsK0RBQStEO0FBQy9ELE1BQU0sVUFBVSxrQkFBa0I7SUFFOUIsSUFBSSxNQUFNLEdBQUcsSUFBSSxHQUFHLEVBQTBCLENBQUM7SUFHL0MsTUFBTSxDQUFDLEdBQUcsQ0FBQyxjQUFjLENBQUMsU0FBUyxFQUFFLFdBQVcsQ0FBQyxDQUFDO0lBRWxELE1BQU0sQ0FBQyxHQUFHLENBQUMsY0FBYyxDQUFDLE9BQU8sRUFBRSxTQUFTLENBQUMsQ0FBQztJQUU5QyxNQUFNLENBQUMsR0FBRyxDQUFDLGNBQWMsQ0FBQyxNQUFNLEVBQUUsUUFBUSxDQUFDLENBQUM7SUFFNUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxjQUFjLENBQUMsT0FBTyxFQUFFLFNBQVMsQ0FBQyxDQUFDO0lBRTlDLE1BQU0sQ0FBQyxHQUFHLENBQUMsY0FBYyxDQUFDLFNBQVMsRUFBRSxXQUFXLENBQUMsQ0FBQztJQUdsRCxPQUFPLE1BQU0sQ0FBQztBQUNsQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiXG4vLyBVc2VyIHN0YXR1cyBjb2RlXG5leHBvcnQgZW51bSBVc2VyU3RhdHVzQ29kZSB7XG4gXG4gICAgLy8gVW5kZWZpbmVkIFswXSBcbiAgICBVTkRFRklORUQgPSAwLFxuIFxuICAgIC8vIFVzZXIgaXMgcmVnaXN0ZXJlZCBhbmQgcGVuZGluZyB2ZXJpZmljYXRpb24gWzFdIFxuICAgIFBFTkRJTkcgPSAxLFxuIFxuICAgIC8vIEFjdGl2ZSB1c2VyIGluIHRoZSBzeXN0ZW0gWzJdIFxuICAgIEFDVElWRSA9IDIsXG4gXG4gICAgLy8gQmxvY2tlZCB1c2VyIChvbmx5IGFjY291bnQgc3lzdGVtIGNhbiB1bmJsb2NrIHRoZSB1c2VyKSBbNF0gXG4gICAgQkxPQ0tFRCA9IDMsXG4gXG4gICAgLy8gU3VzcGVuZGVkIHVzZXIgKGFib3V0IHRvIGJlIGRlbGV0ZWQpIFs4XSBcbiAgICBTVVNQRU5ERUQgPSA0LFxuIFxufVxuXG4vLyBSZXR1cm4gbGlzdCBvZiBVc2VyU3RhdHVzQ29kZSB2YWx1ZXMgYW5kIHRoZWlyIGRpc3BsYXkgbmFtZXNcbmV4cG9ydCBmdW5jdGlvbiBHZXRVc2VyU3RhdHVzQ29kZXMoKSA6IE1hcDxVc2VyU3RhdHVzQ29kZSwgc3RyaW5nPiB7XG5cbiAgICBsZXQgcmVzdWx0ID0gbmV3IE1hcDxVc2VyU3RhdHVzQ29kZSwgc3RyaW5nPigpO1xuXG4gICAgXG4gICAgcmVzdWx0LnNldChVc2VyU3RhdHVzQ29kZS5VTkRFRklORUQsICdVbmRlZmluZWQnKTtcbiAgICBcbiAgICByZXN1bHQuc2V0KFVzZXJTdGF0dXNDb2RlLlBFTkRJTkcsICdQZW5kaW5nJyk7XG4gICAgXG4gICAgcmVzdWx0LnNldChVc2VyU3RhdHVzQ29kZS5BQ1RJVkUsICdBY3RpdmUnKTtcbiAgICBcbiAgICByZXN1bHQuc2V0KFVzZXJTdGF0dXNDb2RlLkJMT0NLRUQsICdCbG9ja2VkJyk7XG4gICAgXG4gICAgcmVzdWx0LnNldChVc2VyU3RhdHVzQ29kZS5TVVNQRU5ERUQsICdTdXNwZW5kZWQnKTtcbiAgICBcblxuICAgIHJldHVybiByZXN1bHQ7XG59Il19