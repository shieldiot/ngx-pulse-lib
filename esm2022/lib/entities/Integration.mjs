import { BaseEntity } from '../entities/BaseEntity';
// Integration specifications
export class Integration extends BaseEntity {
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSW50ZWdyYXRpb24uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtcHVsc2UtbGliL3NyYy9saWIvZW50aXRpZXMvSW50ZWdyYXRpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBT0EsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBSXBELDZCQUE2QjtBQUM3QixNQUFNLE9BQU8sV0FBWSxTQUFRLFVBQVU7Q0FrRTFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW50ZWdyYXRpb25UeXBlQ29kZSB9IGZyb20gJy4uL2VudW1zL0ludGVncmF0aW9uVHlwZUNvZGUnO1xuaW1wb3J0IHsgSW50ZWdyYXRpb25UcmlnZ2VyQ29kZSB9IGZyb20gJy4uL2VudW1zL0ludGVncmF0aW9uVHJpZ2dlckNvZGUnO1xuaW1wb3J0IHsgSHR0cE1ldGhvZENvZGUgfSBmcm9tICcuLi9lbnVtcy9IdHRwTWV0aG9kQ29kZSc7XG5pbXBvcnQgeyBTdHJpbmdLZXlWYWx1ZSB9IGZyb20gJy4uL2NvbW1vbi9TdHJpbmdLZXlWYWx1ZSc7XG5pbXBvcnQgeyBFdmVudFR5cGVDb2RlIH0gZnJvbSAnLi4vZW51bXMvRXZlbnRUeXBlQ29kZSc7XG5pbXBvcnQgeyBTZXZlcml0eVR5cGVDb2RlIH0gZnJvbSAnLi4vZW51bXMvU2V2ZXJpdHlUeXBlQ29kZSc7XG5pbXBvcnQgeyBEZXZpY2VBY3Rpb25Db2RlIH0gZnJvbSAnLi4vZW51bXMvRGV2aWNlQWN0aW9uQ29kZSc7XG5pbXBvcnQgeyBCYXNlRW50aXR5IH0gZnJvbSAnLi4vZW50aXRpZXMvQmFzZUVudGl0eSc7XG5cblxuXG4vLyBJbnRlZ3JhdGlvbiBzcGVjaWZpY2F0aW9uc1xuZXhwb3J0IGNsYXNzIEludGVncmF0aW9uIGV4dGVuZHMgQmFzZUVudGl0eSB7XG4gXG4gICAgLy8gQWNjb3VudCBJZCBcbiAgICBwdWJsaWMgYWNjb3VudElkOiBzdHJpbmc7XG4gXG4gICAgLy8gU3RyZWFtIElkIChsZWF2ZSBlbXB0eSB0byBhcHBseSBpbnRlZ3JhdGlvbiBvbiBhbGwgc3RyZWFtcykgXG4gICAgcHVibGljIHN0cmVhbUlkOiBzdHJpbmc7XG4gXG4gICAgLy8gSW50ZWdyYXRpb24gdHlwZSAoSFRUUCB8IFNNVFAgfCBFTUFJTCAuLi4pIFxuICAgIHB1YmxpYyB0eXBlOiBJbnRlZ3JhdGlvblR5cGVDb2RlO1xuIFxuICAgIC8vIEludGVncmF0aW9uIHRyaWdnZXIgKEVWRU5UIHwgQUNUSU9OIC4uLikgXG4gICAgcHVibGljIHRyaWdnZXI6IEludGVncmF0aW9uVHJpZ2dlckNvZGU7XG4gXG4gICAgLy8gSW50ZWdyYXRpb24gbmFtZSBcbiAgICBwdWJsaWMgbmFtZTogc3RyaW5nO1xuIFxuICAgIC8vIElzIGludGVncmF0aW9uIGVuYWJsZWQgXG4gICAgcHVibGljIGVuYWJsZWQ6IGJvb2xlYW47XG4gXG4gICAgLy8gSG9zdCBuYW1lIG9yIGlwIGFkZHJlc3MgKGFwcGxpY2FibGUgZm9yIGFsbCBwcm90b2NvbHMpIFxuICAgIHB1YmxpYyBob3N0OiBzdHJpbmc7XG4gXG4gICAgLy8gUG9ydCBudW1iZXIgKGFwcGxpY2FibGUgZm9yIGFsbCBwcm90b2NvbHMpIFxuICAgIHB1YmxpYyBwb3J0OiBudW1iZXI7XG4gXG4gICAgLy8gVXNlciAoYXBwbGljYWJsZSBmb3IgYWxsIHByb3RvY29scykgXG4gICAgcHVibGljIHVzZXI6IHN0cmluZztcbiBcbiAgICAvLyBQYXNzd29yZCAoYXBwbGljYWJsZSBmb3IgYWxsIHByb3RvY29scykgXG4gICAgcHVibGljIHBhc3N3b3JkOiBzdHJpbmc7XG4gXG4gICAgLy8gSFRUUCBwcm90b2NvbCBVUkwgcGF0aCAoYXBwbGljYWJsZSBmb3IgaHR0cC9odHRwcyBwcm90b2NvbHMpIFxuICAgIHB1YmxpYyB1cmw6IHN0cmluZztcbiBcbiAgICAvLyBIVFRQIHByb3RvY29sIG1ldGhvZDogR0VUIHwgUE9TVCB8IFBVVCB8IFBBVENIIHwgREVMRVRFIChhcHBsaWNhYmxlIGZvciBodHRwL2h0dHBzIHByb3RvY29scykgXG4gICAgcHVibGljIG1ldGhvZDogSHR0cE1ldGhvZENvZGU7XG4gXG4gICAgLy8gSFRUUCBwcm90b2NvbCBIZWFkZXJzIChhcHBsaWNhYmxlIGZvciBodHRwL2h0dHBzIHByb3RvY29scykgXG4gICAgcHVibGljIGhlYWRlcnM6IFN0cmluZ0tleVZhbHVlW107XG4gXG4gICAgLy8gTWVzc2FnZSBjb250ZW50IG1pbWUgdHlwZSBcbiAgICBwdWJsaWMgbWltZVR5cGU6IHN0cmluZztcbiBcbiAgICAvLyBTTVRQL0VNQUlMIHByb3RvY29sIExpc3Qgb2YgcmVjaXBpZW50cyBcbiAgICBwdWJsaWMgcmVjaXBpZW50czogc3RyaW5nW107XG4gXG4gICAgLy8gU01UUC9FTUFJTCBwcm90b2NvbCBNZXNzYWdlIHN1YmplY3QgdGVtcGxhdGUgXG4gICAgcHVibGljIHN1YmplY3Q6IHN0cmluZztcbiBcbiAgICAvLyBNZXNzYWdlIGJvZHkgdGVtcGxhdGUgXG4gICAgcHVibGljIGJvZHk6IHN0cmluZztcbiBcbiAgICAvLyBTTVRQL0VNQUlMIHNlbmRlciAod2lsbCBiZTogc3lzdGVtQHB1bHNlaW90LmlvIGlmIGl0IGlzIGVtcHR5KSBcbiAgICBwdWJsaWMgZnJvbTogc3RyaW5nO1xuIFxuICAgIC8vIEFjdGl2YXRlIGludGVncmF0aW9uIG9ubHkgaWYgdGhlIGV2ZW50IG9iamVjdCB0eXBlIGNvZGUgaXMgaW4gdGhlIGxpc3QgKGVtcHR5IGxpc3QgbWVhbnMgbm8gZmlsdGVyKSBcbiAgICBwdWJsaWMgZXZlbnRUeXBlczogRXZlbnRUeXBlQ29kZVtdO1xuIFxuICAgIC8vIEFjdGl2YXRlIGludGVncmF0aW9uIG9ubHkgaWYgdGhlIGV2ZW50IHNldmVyaXR5IG1hdGNoaW5nIHRoaXMgdmFsdWUgXG4gICAgcHVibGljIGV2ZW50U2V2ZXJpdHk6IFNldmVyaXR5VHlwZUNvZGU7XG4gXG4gICAgLy8gQWN0aXZhdGUgaW50ZWdyYXRpb24gb25seSBmb3Igc3BlY2lmaWMgYWN0aW9uIChhcHBsaWNhYmxlIGZvciBUcmlnZ2VyID0gQUNUSU9OKSBcbiAgICBwdWJsaWMgcHJldmVudGl2ZUFjdGlvbjogRGV2aWNlQWN0aW9uQ29kZTtcbiBcbiBcbn1cblxuXG4iXX0=