// StreamConfig is a stream configuration description
export class StreamConfig {
    constructor(ingest, sessionTransform, usageTransform, thresholds, shieldexConfig, eventSeverityConfig, preventiveActions, deviceConfig) {
        if (ingest !== undefined) {
            this.ingest = ingest;
        }
        if (sessionTransform !== undefined) {
            this.sessionTransform = sessionTransform;
        }
        if (usageTransform !== undefined) {
            this.usageTransform = usageTransform;
        }
        if (thresholds !== undefined) {
            this.thresholds = thresholds;
        }
        if (shieldexConfig !== undefined) {
            this.shieldexConfig = shieldexConfig;
        }
        if (eventSeverityConfig !== undefined) {
            this.eventSeverityConfig = eventSeverityConfig;
        }
        if (preventiveActions !== undefined) {
            this.preventiveActions = preventiveActions;
        }
        if (deviceConfig !== undefined) {
            this.deviceConfig = deviceConfig;
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3RyZWFtQ29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LXB1bHNlLWxpYi9zcmMvbGliL2VudGl0aWVzL1N0cmVhbUNvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFXQSxxREFBcUQ7QUFDckQsTUFBTSxPQUFPLFlBQVk7SUEwQnBCLFlBQVksTUFBc0IsRUFBRSxnQkFBbUMsRUFBRSxjQUErQixFQUFFLFVBQXVCLEVBQUUsY0FBK0IsRUFBRSxtQkFBeUMsRUFBRSxpQkFBc0MsRUFBRSxZQUEyQjtRQUMvUSxJQUFJLE1BQU0sS0FBSyxTQUFTLEVBQUUsQ0FBQztZQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO1FBQUMsQ0FBQztRQUNuRCxJQUFJLGdCQUFnQixLQUFLLFNBQVMsRUFBRSxDQUFDO1lBQUMsSUFBSSxDQUFDLGdCQUFnQixHQUFHLGdCQUFnQixDQUFDO1FBQUMsQ0FBQztRQUNqRixJQUFJLGNBQWMsS0FBSyxTQUFTLEVBQUUsQ0FBQztZQUFDLElBQUksQ0FBQyxjQUFjLEdBQUcsY0FBYyxDQUFDO1FBQUMsQ0FBQztRQUMzRSxJQUFJLFVBQVUsS0FBSyxTQUFTLEVBQUUsQ0FBQztZQUFDLElBQUksQ0FBQyxVQUFVLEdBQUcsVUFBVSxDQUFDO1FBQUMsQ0FBQztRQUMvRCxJQUFJLGNBQWMsS0FBSyxTQUFTLEVBQUUsQ0FBQztZQUFDLElBQUksQ0FBQyxjQUFjLEdBQUcsY0FBYyxDQUFDO1FBQUMsQ0FBQztRQUMzRSxJQUFJLG1CQUFtQixLQUFLLFNBQVMsRUFBRSxDQUFDO1lBQUMsSUFBSSxDQUFDLG1CQUFtQixHQUFHLG1CQUFtQixDQUFDO1FBQUMsQ0FBQztRQUMxRixJQUFJLGlCQUFpQixLQUFLLFNBQVMsRUFBRSxDQUFDO1lBQUMsSUFBSSxDQUFDLGlCQUFpQixHQUFHLGlCQUFpQixDQUFDO1FBQUMsQ0FBQztRQUNwRixJQUFJLFlBQVksS0FBSyxTQUFTLEVBQUUsQ0FBQztZQUFDLElBQUksQ0FBQyxZQUFZLEdBQUcsWUFBWSxDQUFDO1FBQUMsQ0FBQztJQUN6RSxDQUFDO0NBRUoiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTZXNzaW9uVHJhbnNmb3JtIH0gZnJvbSAnLi4vY29tbW9uL1Nlc3Npb25UcmFuc2Zvcm0nO1xuaW1wb3J0IHsgVXNhZ2VUcmFuc2Zvcm0gfSBmcm9tICcuLi9jb21tb24vVXNhZ2VUcmFuc2Zvcm0nO1xuaW1wb3J0IHsgVGhyZXNob2xkcyB9IGZyb20gJy4uL2NvbW1vbi9UaHJlc2hvbGRzJztcbmltcG9ydCB7IFNoaWVsZGV4Q29uZmlnIH0gZnJvbSAnLi4vY29tbW9uL1NoaWVsZGV4Q29uZmlnJztcbmltcG9ydCB7IEV2ZW50U2V2ZXJpdHlDb25maWcgfSBmcm9tICcuLi9jb21tb24vRXZlbnRTZXZlcml0eUNvbmZpZyc7XG5pbXBvcnQgeyBEZXZpY2VBY3Rpb25Db2RlIH0gZnJvbSAnLi4vZW51bXMvRGV2aWNlQWN0aW9uQ29kZSc7XG5pbXBvcnQgeyBEZXZpY2VDb25maWcgfSBmcm9tICcuLi9jb21tb24vRGV2aWNlQ29uZmlnJztcbmltcG9ydCB7IERhdGFJbmdlc3Rpb24gfSBmcm9tICcuLi9lbnRpdGllcy9EYXRhSW5nZXN0aW9uJztcblxuXG5cbi8vIFN0cmVhbUNvbmZpZyBpcyBhIHN0cmVhbSBjb25maWd1cmF0aW9uIGRlc2NyaXB0aW9uXG5leHBvcnQgY2xhc3MgU3RyZWFtQ29uZmlnIHtcbiBcbiAgICAvLyBTdHJlYW0gZGF0YSBpbmdlc3Rpb24gcGlwZWxpbmUgXG4gICAgcHVibGljIGluZ2VzdDogRGF0YUluZ2VzdGlvbjtcbiBcbiAgICAvLyBTZXNzaW9uIGRhdGEgdHJhbnNmb3JtIHBhcmFtZXRlcnMgKG5vcm1hbGl6ZSB2YWx1ZXMpIFxuICAgIHB1YmxpYyBzZXNzaW9uVHJhbnNmb3JtOiBTZXNzaW9uVHJhbnNmb3JtO1xuIFxuICAgIC8vIFVzYWdlIGRhdGEgdHJhbnNmb3JtIHBhcmFtZXRlcnMgKG5vcm1hbGl6ZSB2YWx1ZXMpIFxuICAgIHB1YmxpYyB1c2FnZVRyYW5zZm9ybTogVXNhZ2VUcmFuc2Zvcm07XG4gXG4gICAgLy8gU2V0IG9mIHN0cmVhbSBjb25maWd1cmF0aW9uIHRocmVzaG9sZHMgXG4gICAgcHVibGljIHRocmVzaG9sZHM6IFRocmVzaG9sZHM7XG4gXG4gICAgLy8gU2V0IG9mIHN0cmVhbSBzaGllbGRleCBjb25maWd1cmF0aW9uIFxuICAgIHB1YmxpYyBzaGllbGRleENvbmZpZzogU2hpZWxkZXhDb25maWc7XG4gXG4gICAgLy8gU2V0IG9mIGV2ZW50IHNldmVyaXR5IGNvbmZpZ3VyYXRpb24gXG4gICAgcHVibGljIGV2ZW50U2V2ZXJpdHlDb25maWc6IEV2ZW50U2V2ZXJpdHlDb25maWc7XG4gXG4gICAgLy8gU2V0IG9mIGF2YWlsYWJsZSBwcmV2ZW50aXZlIGFjdGlvbnMgdG8gYXBwbHkgXG4gICAgcHVibGljIHByZXZlbnRpdmVBY3Rpb25zOiBEZXZpY2VBY3Rpb25Db2RlW107XG4gXG4gICAgLy8gU2V0IG9mIGRldmljZSByZWxhdGVkIGNvbmZpZ3VyYXRpb25zIFxuICAgIHB1YmxpYyBkZXZpY2VDb25maWc6IERldmljZUNvbmZpZztcbiBcbiAgICAgY29uc3RydWN0b3IoaW5nZXN0PzogRGF0YUluZ2VzdGlvbiwgc2Vzc2lvblRyYW5zZm9ybT86IFNlc3Npb25UcmFuc2Zvcm0sIHVzYWdlVHJhbnNmb3JtPzogVXNhZ2VUcmFuc2Zvcm0sIHRocmVzaG9sZHM/OiBUaHJlc2hvbGRzLCBzaGllbGRleENvbmZpZz86IFNoaWVsZGV4Q29uZmlnLCBldmVudFNldmVyaXR5Q29uZmlnPzogRXZlbnRTZXZlcml0eUNvbmZpZywgcHJldmVudGl2ZUFjdGlvbnM/OiBEZXZpY2VBY3Rpb25Db2RlW10sIGRldmljZUNvbmZpZz86IERldmljZUNvbmZpZykgeyBcbiAgICAgICAgaWYgKGluZ2VzdCAhPT0gdW5kZWZpbmVkKSB7IHRoaXMuaW5nZXN0ID0gaW5nZXN0OyB9XG4gICAgICAgIGlmIChzZXNzaW9uVHJhbnNmb3JtICE9PSB1bmRlZmluZWQpIHsgdGhpcy5zZXNzaW9uVHJhbnNmb3JtID0gc2Vzc2lvblRyYW5zZm9ybTsgfVxuICAgICAgICBpZiAodXNhZ2VUcmFuc2Zvcm0gIT09IHVuZGVmaW5lZCkgeyB0aGlzLnVzYWdlVHJhbnNmb3JtID0gdXNhZ2VUcmFuc2Zvcm07IH1cbiAgICAgICAgaWYgKHRocmVzaG9sZHMgIT09IHVuZGVmaW5lZCkgeyB0aGlzLnRocmVzaG9sZHMgPSB0aHJlc2hvbGRzOyB9XG4gICAgICAgIGlmIChzaGllbGRleENvbmZpZyAhPT0gdW5kZWZpbmVkKSB7IHRoaXMuc2hpZWxkZXhDb25maWcgPSBzaGllbGRleENvbmZpZzsgfVxuICAgICAgICBpZiAoZXZlbnRTZXZlcml0eUNvbmZpZyAhPT0gdW5kZWZpbmVkKSB7IHRoaXMuZXZlbnRTZXZlcml0eUNvbmZpZyA9IGV2ZW50U2V2ZXJpdHlDb25maWc7IH1cbiAgICAgICAgaWYgKHByZXZlbnRpdmVBY3Rpb25zICE9PSB1bmRlZmluZWQpIHsgdGhpcy5wcmV2ZW50aXZlQWN0aW9ucyA9IHByZXZlbnRpdmVBY3Rpb25zOyB9XG4gICAgICAgIGlmIChkZXZpY2VDb25maWcgIT09IHVuZGVmaW5lZCkgeyB0aGlzLmRldmljZUNvbmZpZyA9IGRldmljZUNvbmZpZzsgfVxuICAgIH1cblxufVxuXG5cbiJdfQ==