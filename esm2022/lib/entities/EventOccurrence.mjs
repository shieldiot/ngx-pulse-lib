// A single instance of event generated for the same deviceId based on the same rule on the same month
export class EventOccurrence {
    constructor(timestamp, source, sourceIp, indicators, trafficDirection) {
        if (timestamp !== undefined) {
            this.timestamp = timestamp;
        }
        if (source !== undefined) {
            this.source = source;
        }
        if (sourceIp !== undefined) {
            this.sourceIp = sourceIp;
        }
        if (indicators !== undefined) {
            this.indicators = indicators;
        }
        if (trafficDirection !== undefined) {
            this.trafficDirection = trafficDirection;
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRXZlbnRPY2N1cnJlbmNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LXB1bHNlLWxpYi9zcmMvbGliL2VudGl0aWVzL0V2ZW50T2NjdXJyZW5jZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFLQSxzR0FBc0c7QUFDdEcsTUFBTSxPQUFPLGVBQWU7SUFpQnZCLFlBQVksU0FBa0IsRUFBRSxNQUFlLEVBQUUsUUFBaUIsRUFBRSxVQUF3QixFQUFFLGdCQUF1QztRQUNsSSxJQUFJLFNBQVMsS0FBSyxTQUFTLEVBQUUsQ0FBQztZQUFDLElBQUksQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDO1FBQUMsQ0FBQztRQUM1RCxJQUFJLE1BQU0sS0FBSyxTQUFTLEVBQUUsQ0FBQztZQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO1FBQUMsQ0FBQztRQUNuRCxJQUFJLFFBQVEsS0FBSyxTQUFTLEVBQUUsQ0FBQztZQUFDLElBQUksQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDO1FBQUMsQ0FBQztRQUN6RCxJQUFJLFVBQVUsS0FBSyxTQUFTLEVBQUUsQ0FBQztZQUFDLElBQUksQ0FBQyxVQUFVLEdBQUcsVUFBVSxDQUFDO1FBQUMsQ0FBQztRQUMvRCxJQUFJLGdCQUFnQixLQUFLLFNBQVMsRUFBRSxDQUFDO1lBQUMsSUFBSSxDQUFDLGdCQUFnQixHQUFHLGdCQUFnQixDQUFDO1FBQUMsQ0FBQztJQUNyRixDQUFDO0NBRUoiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmRpY2F0b3IgfSBmcm9tICcuLi9jb21tb24nO1xuaW1wb3J0IHsgVHJhZmZpY0RpcmVjdGlvbkNvZGUgfSBmcm9tICcuLi9lbnVtcyc7XG5cblxuXG4vLyBBIHNpbmdsZSBpbnN0YW5jZSBvZiBldmVudCBnZW5lcmF0ZWQgZm9yIHRoZSBzYW1lIGRldmljZUlkIGJhc2VkIG9uIHRoZSBzYW1lIHJ1bGUgb24gdGhlIHNhbWUgbW9udGhcbmV4cG9ydCBjbGFzcyBFdmVudE9jY3VycmVuY2Uge1xuIFxuICAgIC8vIEV2ZW50IG9jY3VycmVuY2UgdGltZSBbRXBvY2ggbWlsbGlzZWNvbmRzIFRpbWVzdGFtcF0gXG4gICAgcHVibGljIHRpbWVzdGFtcDogbnVtYmVyO1xuIFxuICAgIC8vIFJlZmVyZW5jZWQgc291cmNlIGZpbGUgXG4gICAgcHVibGljIHNvdXJjZTogc3RyaW5nO1xuIFxuICAgIC8vIFRoZSBhbGxvY2F0ZWQgSVAgZm9yIHRoZSBkZXZpY2UgYXQgdGhlIHRpbWUgb2YgdGhlIGV2ZW50IG9jY3VycmVuY2UgXG4gICAgcHVibGljIHNvdXJjZUlwOiBzdHJpbmc7XG4gXG4gICAgLy8gTGlzdCBvZiBldmVudCBvY2N1cnJlbmNlIGluZGljYXRvcnMgXG4gICAgcHVibGljIGluZGljYXRvcnM6IEluZGljYXRvcltdO1xuIFxuICAgIC8vIERlbm90ZXMgbmV0d29yayB0cmFmZmljIGRpcmVjdGlvbjogVU5ERUZJTkVEIHwgSU5CT1VORCB8IE9VVEJPVU5EIFxuICAgIHB1YmxpYyB0cmFmZmljRGlyZWN0aW9uOiBUcmFmZmljRGlyZWN0aW9uQ29kZTtcbiBcbiAgICAgY29uc3RydWN0b3IodGltZXN0YW1wPzogbnVtYmVyLCBzb3VyY2U/OiBzdHJpbmcsIHNvdXJjZUlwPzogc3RyaW5nLCBpbmRpY2F0b3JzPzogSW5kaWNhdG9yW10sIHRyYWZmaWNEaXJlY3Rpb24/OiBUcmFmZmljRGlyZWN0aW9uQ29kZSkgeyBcbiAgICAgICAgaWYgKHRpbWVzdGFtcCAhPT0gdW5kZWZpbmVkKSB7IHRoaXMudGltZXN0YW1wID0gdGltZXN0YW1wOyB9XG4gICAgICAgIGlmIChzb3VyY2UgIT09IHVuZGVmaW5lZCkgeyB0aGlzLnNvdXJjZSA9IHNvdXJjZTsgfVxuICAgICAgICBpZiAoc291cmNlSXAgIT09IHVuZGVmaW5lZCkgeyB0aGlzLnNvdXJjZUlwID0gc291cmNlSXA7IH1cbiAgICAgICAgaWYgKGluZGljYXRvcnMgIT09IHVuZGVmaW5lZCkgeyB0aGlzLmluZGljYXRvcnMgPSBpbmRpY2F0b3JzOyB9XG4gICAgICAgIGlmICh0cmFmZmljRGlyZWN0aW9uICE9PSB1bmRlZmluZWQpIHsgdGhpcy50cmFmZmljRGlyZWN0aW9uID0gdHJhZmZpY0RpcmVjdGlvbjsgfVxuICAgIH1cblxufVxuXG5cbiJdfQ==