import { BaseEntity } from '../entities/BaseEntity';
// Deterministic Rule definition
export class Rule extends BaseEntity {
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUnVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25neC1wdWxzZS1saWIvc3JjL2xpYi9lbnRpdGllcy9SdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUlwRCxnQ0FBZ0M7QUFDaEMsTUFBTSxPQUFPLElBQUssU0FBUSxVQUFVO0NBbURuQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERldmljZVR5cGVDb2RlIH0gZnJvbSAnLi4vZW51bXMvRGV2aWNlVHlwZUNvZGUnO1xuaW1wb3J0IHsgRXZlbnRUeXBlQ29kZSB9IGZyb20gJy4uL2VudW1zL0V2ZW50VHlwZUNvZGUnO1xuaW1wb3J0IHsgU2V2ZXJpdHlUeXBlQ29kZSB9IGZyb20gJy4uL2VudW1zL1NldmVyaXR5VHlwZUNvZGUnO1xuaW1wb3J0IHsgQmFzZUVudGl0eSB9IGZyb20gJy4uL2VudGl0aWVzL0Jhc2VFbnRpdHknO1xuXG5cblxuLy8gRGV0ZXJtaW5pc3RpYyBSdWxlIGRlZmluaXRpb25cbmV4cG9ydCBjbGFzcyBSdWxlIGV4dGVuZHMgQmFzZUVudGl0eSB7XG4gXG4gICAgLy8gQWNjb3VudCBJZCBcbiAgICBwdWJsaWMgYWNjb3VudElkOiBzdHJpbmc7XG4gXG4gICAgLy8gU3RyZWFtIElkIFxuICAgIHB1YmxpYyBzdHJlYW1JZDogc3RyaW5nO1xuIFxuICAgIC8vIFJ1bGUgbmFtZSBcbiAgICBwdWJsaWMgbmFtZTogc3RyaW5nO1xuIFxuICAgIC8vIFJ1bGUgZGVzY3JpcHRpb24gXG4gICAgcHVibGljIGRlc2NyaXB0aW9uOiBzdHJpbmc7XG4gXG4gICAgLy8gRmxhZyB0byBpbmRpY2F0ZSBpZiB0aGlzIHJ1bGUgaXMgZW5hYmxlZCAoYWN0aXZlKSBvciBkaXNhYmxlZCBcbiAgICBwdWJsaWMgaXNFbmFibGVkOiBib29sZWFuO1xuIFxuICAgIC8vIEZsYWcgdG8gaW5kaWNhdGUgaWYgdGhpcyBpcyBhIHN5c3RlbSBydWxlIChyZWFkLW9ubHkpIG9yIHVzZXItZGVmaW5lZCBydWxlIFxuICAgIHB1YmxpYyBpc1N5c3RlbVJ1bGU6IGJvb2xlYW47XG4gXG4gICAgLy8gRmxhZyB0byBpbmRpY2F0ZSBpZiB0aGlzIHJ1bGUgaXMgYWN0aXZlICh0cnVlKSBvciBzdXNwZW5kZWQgKGZhbHNlKSwgb25seSBhY3RpdmUgcnVsZXMgYXJlIGV2YWx1YXRlZCBcbiAgICBwdWJsaWMgaXNBY3RpdmVSdWxlOiBib29sZWFuO1xuIFxuICAgIC8vIFJ1bGUgY29udGV4dCAtIHdoYXQgaXMgdGhlIGRhdGEgdHlwZSB0byBiZSBpbmplY3RlZCBcbiAgICBwdWJsaWMgY29udGV4dDogc3RyaW5nO1xuIFxuICAgIC8vIExpc3Qgb2YgQU5EIGNvbmRpdGlvbnMsIGFsbCBvZiB0aGVtIG11c3QgYmUgdHJ1ZSBmb3IgdGhlIHJ1bGUgdG8gdHJpZ2dlciBldmVudCBcbiAgICBwdWJsaWMgbWF0Y2hBbGw6IHN0cmluZ1tdO1xuIFxuICAgIC8vIExpc3Qgb2YgT1IgY29uZGl0aW9ucywgYXQgbGVhc3Qgb25lIG9mIHRoZW0gbXVzdCBiZSB0cnVlIGZvciB0aGUgcnVsZSB0byB0cmlnZ2VyIGV2ZW50fSBcbiAgICBwdWJsaWMgbWF0Y2hBbnk6IHN0cmluZ1tdO1xuIFxuICAgIC8vIEV4Y2x1ZGUgZGV2aWNlcyB3aXRoIElEIGluY2x1ZGVkIGluIHRoaXMgbGlzdCBcbiAgICBwdWJsaWMgZXhjbHVkZUlEczogc3RyaW5nW107XG4gXG4gICAgLy8gRXhjbHVkZSBkZXZpY2VzIHdpdGggdHlwZSBpbmNsdWRlZCBpbiB0aGlzIGxpc3QgXG4gICAgcHVibGljIGV4Y2x1ZGVUYWdzOiBzdHJpbmdbXTtcbiBcbiAgICAvLyBFeGNsdWRlIGRldmljZXMgd2l0aCB0aGlzIHR5cGUgXG4gICAgcHVibGljIGV4Y2x1ZGVUeXBlczogRGV2aWNlVHlwZUNvZGVbXTtcbiBcbiAgICAvLyBUaGUgdGltZSBkdXJhdGlvbiAoaW4gc2Vjb25kcykgZm9yIGNvbnNlY3V0aXZlIGFnZ3JlZ2F0aW9ucyBcbiAgICBwdWJsaWMgdGltZVdpbmRvd1NlYzogbnVtYmVyO1xuIFxuICAgIC8vIFNldCB0aGUgZXZlbnQgdHlwZSBvbiBldmVudHMgZ2VuZXJhdGVkIGJ5IHRoaXMgcnVsZSBcbiAgICBwdWJsaWMgc2V0RXZlbnRUeXBlOiBFdmVudFR5cGVDb2RlO1xuIFxuICAgIC8vIFNldCB0aGUgZXZlbnQgc2V2ZXJpdHkgb24gZXZlbnRzIGdlbmVyYXRlZCBieSB0aGlzIHJ1bGUgXG4gICAgcHVibGljIHNldEV2ZW50U2V2ZXJpdHk6IFNldmVyaXR5VHlwZUNvZGU7XG4gXG4gXG59XG5cblxuIl19