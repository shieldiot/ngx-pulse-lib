import { BaseEntity } from '../base';
// Deterministic Rule definition
export class Rule extends BaseEntity {
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUnVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25neC1wdWxzZS1saWIvc3JjL2xpYi9lbnRpdGllcy9SdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxTQUFTLENBQUM7QUFPckMsZ0NBQWdDO0FBQ2hDLE1BQU0sT0FBTyxJQUFLLFNBQVEsVUFBVTtDQXlEbkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEZXZpY2VUeXBlQ29kZSB9IGZyb20gJy4uL2VudW1zJztcbmltcG9ydCB7IEV2ZW50VHlwZUNvZGUgfSBmcm9tICcuLi9lbnVtcyc7XG5pbXBvcnQgeyBTZXZlcml0eVR5cGVDb2RlIH0gZnJvbSAnLi4vZW51bXMnO1xuaW1wb3J0IHsgQmFzZUVudGl0eSB9IGZyb20gJy4uL2Jhc2UnO1xuaW1wb3J0IHsgUnVsZVR5cGVDb2RlIH0gZnJvbSAnLi4vZW51bXMnO1xuaW1wb3J0IHsgRGF0YVNvdXJjZUNvZGUgfSBmcm9tICcuLi9lbnVtcyc7XG5pbXBvcnQgeyBDb25kaXRpb24gfSBmcm9tICcuLi9lbnRpdGllcyc7XG5cblxuXG4vLyBEZXRlcm1pbmlzdGljIFJ1bGUgZGVmaW5pdGlvblxuZXhwb3J0IGNsYXNzIFJ1bGUgZXh0ZW5kcyBCYXNlRW50aXR5IHtcbiBcbiAgICAvLyBBY2NvdW50IElkIFxuICAgIHB1YmxpYyBhY2NvdW50SWQ6IHN0cmluZztcbiBcbiAgICAvLyBTdHJlYW0gSWQgXG4gICAgcHVibGljIHN0cmVhbUlkOiBzdHJpbmc7XG4gXG4gICAgLy8gUnVsZSBuYW1lIFxuICAgIHB1YmxpYyBuYW1lOiBzdHJpbmc7XG4gXG4gICAgLy8gUnVsZSB0eXBlIFxuICAgIHB1YmxpYyB0eXBlOiBSdWxlVHlwZUNvZGU7XG4gXG4gICAgLy8gUnVsZSBkZXNjcmlwdGlvbiBcbiAgICBwdWJsaWMgZGVzY3JpcHRpb246IHN0cmluZztcbiBcbiAgICAvLyBGbGFnIHRvIGluZGljYXRlIGlmIHRoaXMgaXMgYSBzeXN0ZW0gcnVsZSAocmVhZC1vbmx5KSBvciB1c2VyLWRlZmluZWQgcnVsZSBcbiAgICBwdWJsaWMgaXNTeXN0ZW1SdWxlOiBib29sZWFuO1xuIFxuICAgIC8vIEZsYWcgdG8gaW5kaWNhdGUgaWYgdGhpcyBydWxlIGlzIGFjdGl2ZSAodHJ1ZSkgb3Igc3VzcGVuZGVkIChmYWxzZSksIG9ubHkgYWN0aXZlIHJ1bGVzIGFyZSBldmFsdWF0ZWQgXG4gICAgcHVibGljIGlzQWN0aXZlUnVsZTogYm9vbGVhbjtcbiBcbiAgICAvLyBSdWxlIGNvbnRleHQgLSB3aGF0IGlzIHRoZSBkYXRhIHNvdXJjZSB0byBldmFsdWF0ZSB0aGUgcnVsZSBvbiBcbiAgICBwdWJsaWMgY29udGV4dDogRGF0YVNvdXJjZUNvZGU7XG4gXG4gICAgLy8gTGlzdCBvZiBBTkQgY29uZGl0aW9ucywgYWxsIG9mIHRoZW0gbXVzdCBiZSB0cnVlIGZvciB0aGUgcnVsZSB0byB0cmlnZ2VyIGV2ZW50IFxuICAgIHB1YmxpYyBtYXRjaEFsbDogQ29uZGl0aW9uW107XG4gXG4gICAgLy8gTGlzdCBvZiBPUiBjb25kaXRpb25zLCBhdCBsZWFzdCBvbmUgb2YgdGhlbSBtdXN0IGJlIHRydWUgZm9yIHRoZSBydWxlIHRvIHRyaWdnZXIgZXZlbnR9IFxuICAgIHB1YmxpYyBtYXRjaEFueTogQ29uZGl0aW9uW107XG4gXG4gICAgLy8gRXhjbHVkZSBkZXZpY2VzIHdpdGggSUQgaW5jbHVkZWQgaW4gdGhpcyBsaXN0IFxuICAgIHB1YmxpYyBleGNsdWRlSURzOiBzdHJpbmdbXTtcbiBcbiAgICAvLyBFeGNsdWRlIGRldmljZXMgd2l0aCB0eXBlIGluY2x1ZGVkIGluIHRoaXMgbGlzdCBcbiAgICBwdWJsaWMgZXhjbHVkZVRhZ3M6IHN0cmluZ1tdO1xuIFxuICAgIC8vIEV4Y2x1ZGUgZGV2aWNlcyB3aXRoIHRoaXMgdHlwZSBcbiAgICBwdWJsaWMgZXhjbHVkZVR5cGVzOiBEZXZpY2VUeXBlQ29kZVtdO1xuIFxuICAgIC8vIFRoZSB0aW1lIGR1cmF0aW9uIChpbiBzZWNvbmRzKSBmb3IgY29uc2VjdXRpdmUgYWdncmVnYXRpb25zIFxuICAgIHB1YmxpYyB0aW1lV2luZG93U2VjOiBudW1iZXI7XG4gXG4gICAgLy8gU2V0IHRoZSBldmVudCB0eXBlIG9uIGV2ZW50cyBnZW5lcmF0ZWQgYnkgdGhpcyBydWxlIFxuICAgIHB1YmxpYyBzZXRFdmVudFR5cGU6IEV2ZW50VHlwZUNvZGU7XG4gXG4gICAgLy8gU2V0IHRoZSBldmVudCBzZXZlcml0eSBvbiBldmVudHMgZ2VuZXJhdGVkIGJ5IHRoaXMgcnVsZSBcbiAgICBwdWJsaWMgc2V0RXZlbnRTZXZlcml0eTogU2V2ZXJpdHlUeXBlQ29kZTtcbiBcbiAgICAvLyBMYXN0IEFsZXJ0IGNyZWF0ZWQgZnJvbSB0aGUgcnVsZSB0aW1lc3RhbXAgW0Vwb2NoIG1pbGxpc2Vjb25kcyBUaW1lc3RhbXBdIFxuICAgIHB1YmxpYyBsYXN0QWxlcnRUaW1lc3RhbXA6IG51bWJlcjtcbiBcbiAgICAvLyBBbW91bnQgb2YgYWxlcnRzIGNyZWF0ZWQgZnJvbSB0aGlzIHJ1bGUgXG4gICAgcHVibGljIGFsZXJ0c0NvdW50OiBudW1iZXI7XG4gXG4gXG59XG5cblxuIl19