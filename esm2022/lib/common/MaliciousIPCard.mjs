// MaliciousIPCard is a data structure representing malicious IP card
export class MaliciousIPCard {
    constructor(maliciousIp, maliciousIpDns, countryCode, ipDescription, lastEventTime, attackCategories, numberOfDevices, eventsBySeverityBreakdown) {
        if (maliciousIp !== undefined) {
            this.maliciousIp = maliciousIp;
        }
        if (maliciousIpDns !== undefined) {
            this.maliciousIpDns = maliciousIpDns;
        }
        if (countryCode !== undefined) {
            this.countryCode = countryCode;
        }
        if (ipDescription !== undefined) {
            this.ipDescription = ipDescription;
        }
        if (lastEventTime !== undefined) {
            this.lastEventTime = lastEventTime;
        }
        if (attackCategories !== undefined) {
            this.attackCategories = attackCategories;
        }
        if (numberOfDevices !== undefined) {
            this.numberOfDevices = numberOfDevices;
        }
        if (eventsBySeverityBreakdown !== undefined) {
            this.eventsBySeverityBreakdown = eventsBySeverityBreakdown;
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWFsaWNpb3VzSVBDYXJkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LXB1bHNlLWxpYi9zcmMvbGliL2NvbW1vbi9NYWxpY2lvdXNJUENhcmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBSUEscUVBQXFFO0FBQ3JFLE1BQU0sT0FBTyxlQUFlO0lBMEJ2QixZQUFZLFdBQW9CLEVBQUUsY0FBdUIsRUFBRSxXQUFvQixFQUFFLGFBQXNCLEVBQUUsYUFBc0IsRUFBRSxnQkFBMkIsRUFBRSxlQUF3QixFQUFFLHlCQUEyQztRQUNoTyxJQUFJLFdBQVcsS0FBSyxTQUFTLEVBQUUsQ0FBQztZQUFDLElBQUksQ0FBQyxXQUFXLEdBQUcsV0FBVyxDQUFDO1FBQUMsQ0FBQztRQUNsRSxJQUFJLGNBQWMsS0FBSyxTQUFTLEVBQUUsQ0FBQztZQUFDLElBQUksQ0FBQyxjQUFjLEdBQUcsY0FBYyxDQUFDO1FBQUMsQ0FBQztRQUMzRSxJQUFJLFdBQVcsS0FBSyxTQUFTLEVBQUUsQ0FBQztZQUFDLElBQUksQ0FBQyxXQUFXLEdBQUcsV0FBVyxDQUFDO1FBQUMsQ0FBQztRQUNsRSxJQUFJLGFBQWEsS0FBSyxTQUFTLEVBQUUsQ0FBQztZQUFDLElBQUksQ0FBQyxhQUFhLEdBQUcsYUFBYSxDQUFDO1FBQUMsQ0FBQztRQUN4RSxJQUFJLGFBQWEsS0FBSyxTQUFTLEVBQUUsQ0FBQztZQUFDLElBQUksQ0FBQyxhQUFhLEdBQUcsYUFBYSxDQUFDO1FBQUMsQ0FBQztRQUN4RSxJQUFJLGdCQUFnQixLQUFLLFNBQVMsRUFBRSxDQUFDO1lBQUMsSUFBSSxDQUFDLGdCQUFnQixHQUFHLGdCQUFnQixDQUFDO1FBQUMsQ0FBQztRQUNqRixJQUFJLGVBQWUsS0FBSyxTQUFTLEVBQUUsQ0FBQztZQUFDLElBQUksQ0FBQyxlQUFlLEdBQUcsZUFBZSxDQUFDO1FBQUMsQ0FBQztRQUM5RSxJQUFJLHlCQUF5QixLQUFLLFNBQVMsRUFBRSxDQUFDO1lBQUMsSUFBSSxDQUFDLHlCQUF5QixHQUFHLHlCQUF5QixDQUFDO1FBQUMsQ0FBQztJQUNoSCxDQUFDO0NBRUoiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbnREaXN0cmlidXRpb24gfSBmcm9tICcuLi9lbnRpdGllcyc7XG5cblxuXG4vLyBNYWxpY2lvdXNJUENhcmQgaXMgYSBkYXRhIHN0cnVjdHVyZSByZXByZXNlbnRpbmcgbWFsaWNpb3VzIElQIGNhcmRcbmV4cG9ydCBjbGFzcyBNYWxpY2lvdXNJUENhcmQge1xuIFxuICAgIC8vIFRoZSBtYWxpY2lvdXMgSVAgXG4gICAgcHVibGljIG1hbGljaW91c0lwOiBzdHJpbmc7XG4gXG4gICAgLy8gVGhlIG1hbGljaW91cyBJUCBETlMgbmFtZSAoY2FuIGJlIGNvbW1hLXNlcGFyYXRlZCBsaXN0IG9mIG5hbWVzKSBcbiAgICBwdWJsaWMgbWFsaWNpb3VzSXBEbnM6IHN0cmluZztcbiBcbiAgICAvLyBDb3VudHJ5IGNvZGUgXG4gICAgcHVibGljIGNvdW50cnlDb2RlOiBzdHJpbmc7XG4gXG4gICAgLy8gSXAgZGVzY3JpcHRpb24gXG4gICAgcHVibGljIGlwRGVzY3JpcHRpb246IHN0cmluZztcbiBcbiAgICAvLyBMYXN0IEV2ZW50IFRpbWUgXG4gICAgcHVibGljIGxhc3RFdmVudFRpbWU6IG51bWJlcjtcbiBcbiAgICAvLyBBdHRhY2sgQ2F0ZWdvcmllcyBsaXN0IFxuICAgIHB1YmxpYyBhdHRhY2tDYXRlZ29yaWVzOiBzdHJpbmdbXTtcbiBcbiAgICAvLyBOdW1iZXIgT2YgRGV2aWNlcyBcbiAgICBwdWJsaWMgbnVtYmVyT2ZEZXZpY2VzOiBudW1iZXI7XG4gXG4gICAgLy8gRXZlbnRzIEJ5IFNldmVyaXR5IEJyZWFrZG93biBcbiAgICBwdWJsaWMgZXZlbnRzQnlTZXZlcml0eUJyZWFrZG93bjogSW50RGlzdHJpYnV0aW9uO1xuIFxuICAgICBjb25zdHJ1Y3RvcihtYWxpY2lvdXNJcD86IHN0cmluZywgbWFsaWNpb3VzSXBEbnM/OiBzdHJpbmcsIGNvdW50cnlDb2RlPzogc3RyaW5nLCBpcERlc2NyaXB0aW9uPzogc3RyaW5nLCBsYXN0RXZlbnRUaW1lPzogbnVtYmVyLCBhdHRhY2tDYXRlZ29yaWVzPzogc3RyaW5nW10sIG51bWJlck9mRGV2aWNlcz86IG51bWJlciwgZXZlbnRzQnlTZXZlcml0eUJyZWFrZG93bj86IEludERpc3RyaWJ1dGlvbikgeyBcbiAgICAgICAgaWYgKG1hbGljaW91c0lwICE9PSB1bmRlZmluZWQpIHsgdGhpcy5tYWxpY2lvdXNJcCA9IG1hbGljaW91c0lwOyB9XG4gICAgICAgIGlmIChtYWxpY2lvdXNJcERucyAhPT0gdW5kZWZpbmVkKSB7IHRoaXMubWFsaWNpb3VzSXBEbnMgPSBtYWxpY2lvdXNJcERuczsgfVxuICAgICAgICBpZiAoY291bnRyeUNvZGUgIT09IHVuZGVmaW5lZCkgeyB0aGlzLmNvdW50cnlDb2RlID0gY291bnRyeUNvZGU7IH1cbiAgICAgICAgaWYgKGlwRGVzY3JpcHRpb24gIT09IHVuZGVmaW5lZCkgeyB0aGlzLmlwRGVzY3JpcHRpb24gPSBpcERlc2NyaXB0aW9uOyB9XG4gICAgICAgIGlmIChsYXN0RXZlbnRUaW1lICE9PSB1bmRlZmluZWQpIHsgdGhpcy5sYXN0RXZlbnRUaW1lID0gbGFzdEV2ZW50VGltZTsgfVxuICAgICAgICBpZiAoYXR0YWNrQ2F0ZWdvcmllcyAhPT0gdW5kZWZpbmVkKSB7IHRoaXMuYXR0YWNrQ2F0ZWdvcmllcyA9IGF0dGFja0NhdGVnb3JpZXM7IH1cbiAgICAgICAgaWYgKG51bWJlck9mRGV2aWNlcyAhPT0gdW5kZWZpbmVkKSB7IHRoaXMubnVtYmVyT2ZEZXZpY2VzID0gbnVtYmVyT2ZEZXZpY2VzOyB9XG4gICAgICAgIGlmIChldmVudHNCeVNldmVyaXR5QnJlYWtkb3duICE9PSB1bmRlZmluZWQpIHsgdGhpcy5ldmVudHNCeVNldmVyaXR5QnJlYWtkb3duID0gZXZlbnRzQnlTZXZlcml0eUJyZWFrZG93bjsgfVxuICAgIH1cblxufVxuXG5cbiJdfQ==